#!/bin/sh

# ==================================================================================
# üöÄ Flowise Entrypoint Script with Database Initialization
# ==================================================================================
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º Flowise
# ==================================================================================

set -e

echo "üöÄ Starting Flowise with database initialization..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ PostgreSQL
wait_for_postgres() {
    echo "‚è≥ Waiting for PostgreSQL to be ready..."
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    DB_HOST=${DATABASE_HOST:-localhost}
    DB_PORT=${DATABASE_PORT:-5432}
    DB_USER=${DATABASE_USER:-postgres}
    DB_PASSWORD=${DATABASE_PASSWORD:-postgres}
    DB_NAME=${DATABASE_NAME:-flowise}
    
    # –û–∂–∏–¥–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ PostgreSQL
    until pg_isready -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER"; do
        echo "‚è≥ PostgreSQL is unavailable - sleeping..."
        sleep 2
    done
    
    echo "‚úÖ PostgreSQL is ready!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
create_database() {
    echo "üóÑÔ∏è Checking if database '$DATABASE_NAME' exists..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    DB_EXISTS=$(PGPASSWORD="$DATABASE_PASSWORD" psql -h "$DATABASE_HOST" -p "$DATABASE_PORT" -U "$DATABASE_USER" -lqt | cut -d \| -f 1 | grep -w "$DATABASE_NAME" | wc -l)
    
    if [ "$DB_EXISTS" -eq 0 ]; then
        echo "üìù Creating database '$DATABASE_NAME'..."
        
        # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        if PGPASSWORD="$DATABASE_PASSWORD" createdb -h "$DATABASE_HOST" -p "$DATABASE_PORT" -U "$DATABASE_USER" "$DATABASE_NAME" 2>/dev/null; then
            echo "‚úÖ Database '$DATABASE_NAME' created successfully!"
        else
            echo "‚ö†Ô∏è  Database creation failed, trying alternative method..."
            # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ SQL
            PGPASSWORD="$DATABASE_PASSWORD" psql -h "$DATABASE_HOST" -p "$DATABASE_PORT" -U "$DATABASE_USER" -c "CREATE DATABASE \"$DATABASE_NAME\";" 2>/dev/null || {
                echo "‚ùå Failed to create database '$DATABASE_NAME'"
                echo "üîß Trying to fix collation issues..."
                # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å collation
                PGPASSWORD="$DATABASE_PASSWORD" psql -h "$DATABASE_HOST" -p "$DATABASE_PORT" -U "$DATABASE_USER" -c "ALTER DATABASE template1 REFRESH COLLATION VERSION;" 2>/dev/null || true
                PGPASSWORD="$DATABASE_PASSWORD" psql -h "$DATABASE_HOST" -p "$DATABASE_PORT" -U "$DATABASE_USER" -c "ALTER DATABASE postgres REFRESH COLLATION VERSION;" 2>/dev/null || true
                # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è
                PGPASSWORD="$DATABASE_PASSWORD" psql -h "$DATABASE_HOST" -p "$DATABASE_PORT" -U "$DATABASE_USER" -c "CREATE DATABASE \"$DATABASE_NAME\";" || {
                    echo "‚ùå Still failed to create database. Continuing anyway..."
                }
            }
        fi
    else
        echo "‚úÖ Database '$DATABASE_NAME' already exists!"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π PostgreSQL
setup_extensions() {
    echo "üîß Setting up PostgreSQL extensions..."
    
    PGPASSWORD="$DATABASE_PASSWORD" psql -h "$DATABASE_HOST" -p "$DATABASE_PORT" -U "$DATABASE_USER" -d "$DATABASE_NAME" -c "
        CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";
        CREATE EXTENSION IF NOT EXISTS \"pg_trgm\";
        SELECT 'PostgreSQL extensions installed successfully' as status;
    "
    
    echo "‚úÖ PostgreSQL extensions ready!"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ PostgreSQL
    if [ "$DATABASE_TYPE" = "postgres" ]; then
        echo "üêò PostgreSQL mode detected"
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç PostgreSQL
        apk add --no-cache postgresql-client
        
        # –ñ–¥–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ PostgreSQL
        wait_for_postgres
        
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        create_database
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
        setup_extensions
        
        echo "üéØ Database initialization completed!"
    else
        echo "üìÅ SQLite mode detected - no database initialization needed"
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flowise
    echo "üöÄ Starting Flowise..."
    exec "$@"
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main "$@"
