#!/usr/bin/env node

/**
 * –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö chatflows –∏–∑ Flowise –≤ JSON —Ñ–∞–π–ª—ã
 * 
 * Usage:
 *   node scripts/export-chatflows.js
 * 
 * –†–µ–∑—É–ª—å—Ç–∞—Ç:
 *   chatflows/
 *     ‚îú‚îÄ‚îÄ attributevalue-agent.json
 *     ‚îú‚îÄ‚îÄ events-agent.json
 *     ‚îî‚îÄ‚îÄ ...
 */

const fs = require('fs');
const path = require('path');
const axios = require('axios');

const FLOWISE_URL = process.env.FLOWISE_URL || 'http://localhost:3005';
const CHATFLOWS_DIR = path.join(__dirname, '..', 'chatflows');

async function exportChatflows() {
  console.log('üöÄ Exporting chatflows from Flowise...\n');
  
  try {
    // –°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!fs.existsSync(CHATFLOWS_DIR)) {
      fs.mkdirSync(CHATFLOWS_DIR, { recursive: true });
    }
    
    // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ chatflows —á–µ—Ä–µ–∑ API
    const response = await axios.get(`${FLOWISE_URL}/api/v1/chatflows`);
    
    if (!response.data) {
      console.error('‚ùå No chatflows found');
      process.exit(1);
    }
    
    const chatflows = Array.isArray(response.data) ? response.data : response.data.data || [];
    
    console.log(`Found ${chatflows.length} chatflows\n`);
    
    // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∂–¥—ã–π chatflow
    for (const chatflow of chatflows) {
      const filename = `${chatflow.name.toLowerCase().replace(/\s+/g, '-')}.json`;
      const filepath = path.join(CHATFLOWS_DIR, filename);
      
      // –û—á–∏—Å—Ç–∏—Ç—å chatflow –æ—Ç runtime –ø–æ–ª–µ–π
      const cleanChatflow = {
        name: chatflow.name,
        type: chatflow.type,
        flowData: chatflow.flowData,
        deployed: chatflow.deployed || false,
        category: chatflow.category || 'General',
        chatbotConfig: chatflow.chatbotConfig,
        apiConfig: chatflow.apiConfig,
        analytic: chatflow.analytic,
        speechToText: chatflow.speechToText,
        textToSpeech: chatflow.textToSpeech,
        followUpPrompts: chatflow.followUpPrompts
      };
      
      // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª (pretty JSON)
      fs.writeFileSync(filepath, JSON.stringify(cleanChatflow, null, 2));
      
      console.log(`‚úÖ Exported: ${filename}`);
      console.log(`   Name: ${chatflow.name}`);
      console.log(`   Type: ${chatflow.type}`);
      console.log(`   Category: ${chatflow.category || 'General'}\n`);
    }
    
    console.log(`\nüéâ Successfully exported ${chatflows.length} chatflows to chatflows/`);
    console.log('\nüìù Next steps:');
    console.log('   1. Review files in chatflows/');
    console.log('   2. Commit to git: git add chatflows/ && git commit -m "Add chatflows"');
    console.log('   3. On deployment, run: node scripts/import-chatflows.js');
    
  } catch (error) {
    console.error('‚ùå Export failed:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.error('\nüí° Hint: Is Flowise running on', FLOWISE_URL, '?');
      console.error('   Run: pnpm start');
    }
    
    process.exit(1);
  }
}

exportChatflows();

